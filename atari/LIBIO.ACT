; Library: LIBIO.ACT›; Author.: Wade Ripkowski›; Desc...: I/O Routines›; Date...: 2015.08›; License: GNU General Public License v3.0››; ------------------------------›; Func..: CARD GetCD(BYTE bD)›; Param.: bD=device channel›; Return: CARD›; Desc..: Reads CARD value from device›; ------------------------------›CARD FUNC GetCD(BYTE bD)›  BYTE bL=[0],bN=[0]›  CARD cE=[0]››  ; Read LSB byte›  bL=GetD(bD)›  ; Read MSB byte›  bN=GetD(bD)››  ; Compute value›  cE=(bN*256)+bL›RETURN(cE)›››; ------------------------------›; Func..: INT GetID(BYTE bD)›; Param.: bD=device channel›; Return: INT›; Desc..: Reads INT value from device›; ------------------------------›INT FUNC GetID(BYTE bD)›  CARD cE=[0]›  INT iV=[0]››  ; Read CARD value from device›  cE=GetCD(bD)››  ; If CARD > 65536 its a negative int›  if cE > $8000 then›    ; Flip bits and add 1 to get INT value›    cE=(cE XOR $FFFF)+1›    ; Multiply by -1 to make negative›    iV=cE*-1›  else›    ; Not a negative int, just assign›    iV=cE›  fi›RETURN(iV)›››; ------------------------------›; Func..: PutCD(BYTE bD CAD cE)›; Param.: bD=device channel   ›;         cE=card value to put›; Desc..: Puts CARD value to device›; ------------------------------›PROC PutCD(BYTE bD CARD cE)›  BYTE bL=[0],bN=[0]››  ; Compute MSB and LSB›  bN=cE RSH 8›  bL=cE››  ; Put LSB,MSB bytes to device›  PutD(bD,bL)›  PutD(bD,bN)›RETURN›››; ------------------------------›; Func..: PutID(BYTE bD, INT iV)›; Param.: bD=device channel    ›;         iV=Int to put›; Desc..: Puts INT value to device›; ------------------------------›PROC PutID(BYTE bD INT iV)›  CARD cE››  ; If INT is negative›  if iV < 0 then›    ; Make it positive›    cE=iV * -1›    ; Convert it to high card›    cE=(cE XOR $FFFF) + 1›  else›    ; Is positive, just assign it›    cE=iV›  fi››  ; Put card value to device›  PutCD(bD,cE)›RETURN›››; ------------------------------›; Func..: EatByteD(BYTE bD CARD cB)›; Param.: bD=device channel›;         cB=number of bytes›; Desc..: Read x bytes from device›;         w/o save›; ------------------------------›PROC EatByteD(BYTE bD BYTE cB)›  BYTE bI›  CARD cL››  ; Process len bytes›  for cL=1 to cB›  DO›    ; Read byte and disregard›    bI=GetD(bD)›  OD›RETURN›››MODULE››